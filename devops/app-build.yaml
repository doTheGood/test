steps:
  # Checkout both repos
  - checkout: skillpredict
  - checkout: skillpredict-devops

  # Task to inspect code with Sonar Cloud
  - task: SonarCloudPrepare@1
    displayName: "prepare SonarCloud analysis"
    inputs:
      SonarCloud: "SonarCloud"
      organization: "adecco-group"
      scannerMode: "CLI"
      configFile: "$(Build.SourcesDirectory)/skillpredict/sonarcloud/sonar-project.properties"

  # Install yarn
  - task: Bash@3
    displayName: "install yarn"
    inputs:
      targetType: "inline"
      script: "sudo npm install -g yarn"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict"

  # Set yarn version
  - task: Bash@3
    displayName: "set yarn version"
    inputs:
      targetType: "inline"
      script: "yarn set version 2.4.3"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict"

  # Install dependencies
  - task: Bash@3
    displayName: "install"
    inputs:
      targetType: "inline"
      script: "yarn install"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict"

  # Generate API bindings using local postgres instance  - remove once dep is solved
  - task: Bash@3
    displayName: "generate openapi"
    inputs:
      targetType: "inline"
      script: "./bin/openapi-generate-ci.sh"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict"

  # Generate sp-web-2
  - task: Bash@3
    displayName: "generate sp-web-2"
    inputs:
      targetType: "inline"
      script: "yarn run generate"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict/sp-web-2"

  # Build sp-static
  - task: Bash@3
    displayName: "build sp-static"
    inputs:
      targetType: "inline"
      script: "yarn run build"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict/sp-static"

  # Build storybook
  - task: Bash@3
    displayName: "build storybook"
    inputs:
      targetType: "inline"
      script: "yarn run build:storybook"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict/sp-web-2"

  # Audit npm dependencies
  - task: Bash@3
    displayName: "audit"
    inputs:
      targetType: "inline"
      script: "yarn npm audit --severity critical"
      workingDirectory: "$(Build.SourcesDirectory)/skillpredict"

  - task: SonarCloudAnalyze@1
    displayName: "analyse code with SonarCloud"

  - task: SonarCloudPublish@1
    displayName: "publish SonarCloud quality gate results"

  # Copy sp-web-2 into sp-static
  - task: CopyFiles@2
    displayName: "inject storybook to sp-static"
    enabled: true
    inputs:
      contents: "**"
      sourceFolder: "$(System.DefaultWorkingDirectory)/skillpredict/sp-web-2/storybook-static"
      targetFolder: "$(System.DefaultWorkingDirectory)/skillpredict/sp-static/public"

  # Zip the files for deployment
  - task: ArchiveFiles@1
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    displayName: "archive storybook files"
    inputs:
      archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
      includeRootFolder: false
      rootFolder: "$(System.DefaultWorkingDirectory)/skillpredict/sp-static"

  # Publish artifacts to drop
  - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    artifact: storybook
